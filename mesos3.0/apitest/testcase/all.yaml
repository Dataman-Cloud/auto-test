# Test using included Django test app
# First install python-django
# Then launch the app in another terminal by doing
#   cd testapp
#   python manage.py testserver test_data.json
# Once launched, tests can be executed via:
# 	python resttest.py http://localhost:8000 miniapp-test.yaml

---
- config:
    - testset: "Tests using test app"
    - variable_binds: {email: 'admin@dataman-inc.com', password: "Dataman1234", testpasswd: "Dataman12345", testpasswd1: "Dataman123456" ,wrongpassword: "Daaaaaaaaaa" }
    - generators:  
        - 'test': {type: 'random_int'}

- test: # 正常测试登录获取token
    - name: "1Normal login"
    - url: "/v1/login"
    - method: "post"
    - body: {template: '{"email": "$email","password": "$password"}'}
    - headers: {Content-Type: application/json}
    - expected_status: [200]
    - validators: # operator is applied as: <actual> <operator> <expected>
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data", comparator: "length_eq", expected: 32}
    - extract_binds:
        - 'token': {'jmespath': 'data'}

- test: # 异常测试登录，输入错误帐号密码，获取token
    - name: "2Abnormal login"
    - url: "/v1/login"
    - method: "post"
    - body: {template: '{"email": "$email","password": "$wrongpassword"}'}
    - headers: {Content-Type: application/json}
    - expected_status: [400]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 12007}

- test: # 正常创建用户
    - generator_binds: {testa: test}
    - name: "3Create user"
    - url: "/v1/accounts"
    - method: "post"
    - body: {template: '{"email": "$testa","password": "$testpasswd"}'}
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "success"}

- test: #异常创建相同用户
    - name: "4Abnormal Create user"
    - url: "/v1/accounts"
    - method: "post"
    - body: {template: '{"email": "$email","password": "$password"}'}
    - headers: {template: {Authorization: $token}}
    - expected_status: [409]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 12037}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "email already exists"}

- test: #正常获取用户列表
    - name: "5Normal get all userinfo"
    - url: "/v1/accounts"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data[*].id)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data[*].email)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data[*].loginAt)", comparator: "gt", expected: 0}
    - extract_binds:
        - 'userid': {jmespath: 'data[0].id'}

- test: #正常获取用户信息
    - name: "6Normal get userinfo by userid"
    - url: {template: "/v1/accounts/$userid"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data.id", comparator: "str_eq", expected: {template: "$userid"}}
        - compare: {jmespath: "length(data.email)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data.loginAt)", comparator: "gt", expected: 0}

- test: #异常 输入不存在用户id 获取用户信息
    - name: "7Abnormal get userinfo by userid"
    - url: "/v1/accounts/99999"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [404]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 12005}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "record not found"}

- test: # 正常获取当前用户信息
    - name: "8Normal get about me"
    - url: "/v1/aboutme"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.email)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data.loginAt)", comparator: "gt", expected: 0}

- test: #正常测试新建用户能否正常登录
    - name: "9Normal test  login"
    - url: "/v1/login"
    - method: "post"
    - body: {template: '{"email": "$testa","password": "$testpasswd"}'}
    - headers: {Content-Type: application/json}
    - expected_status: [200]
    - extract_binds:
        - 'testtoken': {'jmespath': 'data'}

- test: #正常测试新建用户修改密码
    - name: "10Normal changed password"
    - url: "/v1/password"
    - method: "put"
    - body: {template: '{"oldpassword": "$testpasswd","password": "$testpasswd1"}'}
    - headers: {template: {Authorization: $testtoken}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "success"}
    
- test: #正常测试新建用户修改密码后能否登录
    - name: "11Normali test  login"
    - url: "/v1/login"
    - method: "post"
    - body: {template: '{"email": "$testa","password": "$testpasswd1"}'}
    - expected_status: [200]


- test: #异常，输入空密码，测试新建用户修改密码
    - name: "12Abnormal changed password"
    - url: "/v1/password"
    - method: "put"
    - body: '{"email": "","password": ""}'
    - headers: {template: {Authorization: $testtoken}}
    - expected_status: [400]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 12034}

- test: #正常测试为获取用户id
    - name: "13Normal test get about me"
    - url: "/v1/aboutme"
    - method: "get"
    - headers: {template: {Authorization: $testtoken}}
    - expected_status: [200]
    - extract_binds:
        - 'testid': {jmespath: 'data.id'}

- test: #正常测试注销新建用户
    - name: "14Normal disable user"
    - url: {template: "/v1/accounts/$testid/disable"}
    - method: "put"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "success"}

- test: #正常测试注销用户能否登录
    - name: "15Normal  test  login"
    - url: "/v1/login"
    - method: "post"
    - body: {template: '{"email": "$testa","password": "$testpasswd1"}'}
    - expected_status: [400]

- test: #正常测试退出登录
    - name: "16Normal logout"
    - url: "/v1/logout"
    - method: "post"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "success"}

- test: #异常测试，输入错误token 登出
    - name: "17Abnormal logout"
    - url: "/v1/logout"
    - method: "post"
    - headers: {template: {Authorization: $testa}}
    - expected_status: [401]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 1}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "token doesn't exists or expired"}

- test: # 正常获取token
    - name: "18Normal login"
    - url: "/v1/login"
    - method: "post"
    - body: {template: '{"email": "$email","password": "$password"}'}
    - headers: {Content-Type: application/json}
    - expected_status: [200]
    - validators: # operator is applied as: <actual> <operator> <expected>
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data", comparator: "length_eq", expected: 32}
    - extract_binds:
        - 'token': {'jmespath': 'data'}

- test: # 正常获取主机列表
    - name: "19Normal get node list"
    - url: "/v1/nodes"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.masters[*].id)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data.slaves[*].id)", comparator: "gt", expected: 0 }
    - extract_binds: 
        - 'node_ip': {jmespath: 'data.slaves[0].ip'}

- test: # 正常获取集群监控信息
    - name: "20Normal get metrics info"
    - url: "/v1/metrics/snapshot"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data)", comparator: "gt", expected: 0}

- test: # 正常获取指定主机信息
    - name: "21Normal get node info "
    - url: {template: "/v1/nodes/$node_ip/info"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.ID)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data.Driver)", comparator: "gt", expected: 0}

- test: # 异常 输入不存在主机获取主机信息
    - name: "22Abnormal get node info "
    - url: "/v1/nodes/1.1.1.1/info"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [404]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 23009}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "The node is not exist."}

- test: #正常获取知道主机容器列表
    - name: "23Normal get instances list"
    - url: {template: "/v1/nodes/$node_ip/instances"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data[*].Id)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data[*].Image)", comparator: "gt", expected: 0 }
    - extract_binds:
        - 'instances_id': {jmespath: "data[0].Id"}

- test: #异常输入错误主机ip获取指定容器列表
    - name: "24Abnormal get instances list "
    - url: "/v1/nodes/1.1.1.1/instances"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [404]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 23009}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "The node is not exist."}

- test: #正常获取指定主机镜像
    - name: "25Normal get images "
    - url: {template: "/v1/nodes/$node_ip/images"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data[*].Id)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data[*].RepoTags)", comparator: "gt", expected: 0}
        - compare: {jmespath: "data[*].Created", comparator: "gt", expected: 0}
        - compare: {jmespath: "data[*].Size", comparator: "gt", expected: 0}
        - compare: {jmespath: "data[*].VirtualSize", comparator: "gt", expected: 0}

- test: #正常获取指定主机指定容器信息
    - name: "26Normal get instances info"
    - url: {template: "/v1/nodes/$node_ip/instances/$instances_id/info"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.Id)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data.Created)", comparator: "gt", expected: 0}

- test: #异常输入错误容器id 获取指定容器信息
    - name: "27Abnormal get instances info"
    - url: {template: "/v1/nodes/$node_ip/instances/999999999/info"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [404]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 23008}
        - compare: {jmespath: "data", comparator: "contains", expected: "No such container"}

- test: #正常获取应用列表
    - name: "valid GET /v1/apps"
    - url: "/v1/apps"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.apps[*].id)", comparator: "gt", expected: 0}

- test: # 正常发应用
    - name: "valid POST /v1/apps"
    - url: "/v1/apps"
    - method: "post"
    - body: '{"id":"simple-templateddd","cmd":null,"cpus":0.1,"mem":128,"disk":0,"instances":1,"container":{"docker":{"image":"blackicebird/2048:latest","network":"BRIDGE"},"type":"DOCKER"}}'
    - headers: {template: {Authorization: $token}}
    - expected_status: [201]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.id)", comparator: "gt", expected: 0}
    - extract_binds:
        - 'appid': {'jmespath': 'data.id'}

- test: # 异常发应用 应用名相同
    - name: "valid POST /v1/apps"
    - url: "/v1/apps"
    - method: "post"
    - body: '{"id":"simple-templateddd","cmd":null,"cpus":0.1,"mem":128,"disk":0,"instances":1,"container":{"docker":{"image":"blackicebird/2048:latest","network":"BRIDGE"},"type":"DOCKER"}}'
    - headers: {template: {Authorization: $token}}
    - expected_status: [400]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 22001}
        - compare: {jmespath: "data", comparator: "contains", expected: "already exists"}

- test: # 异常发应用 json异常
    - name: "valid POST /v1/apps"
    - url: "/v1/apps"
    - method: "post"
    - body: '{"id":"simple-template","cmd":null"cpus":0.1,"mem":128,"disk":0,"instances":1,"container":{"docker":{"image":"blackicebird/2048:latest","network":"BRIDGE"},"type":"DOCKER"}}'
    - headers: {template: {Authorization: $token}}
    - expected_status: [400]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 22001}
        - compare: {jmespath: "data", comparator: "contains", expected: "invalid character"}

- test: #正常更新应用
    - name: "valid PUT /v1/apps"
    - url: {template: "v1/apps$appid"}
    - method: "put"
    - body: '{"id":"simple-templateddd","cmd":null,"cpus":0.1,"mem":16,"disk":0,"instances":2,"container":{"docker":{"image":"blackicebird/2048:latest","network":"BRIDGE"},"type":"DOCKER"}}'
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}

- test: #异常更新应用
    - name: "valid PUT /v1/apps"
    - url:  "v1/apps/appid"
    - method: "put"
    - body: '{"id":"simple-templateddd","cmd":null,"cpus":0.1,"mem":16,"disk":0,"instances":2,"container":{"docker":{"image":"blackicebird/2048:latest","network":"BRIDGE"},"type":"DOCKER"}}'
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}

- test: # 正常获取应用信息
    - name: "valid GET /v1/apps/:aid"
    - url: {template: "/v1/apps$appid"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]

- test: # 正常重启应用
    - name: "valid POST /v1/apps/:aid/restart"
    - url: {template: "/v1/apps$appid/restart"}
    - method: "post"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.deploymentId)", comparator: "eq", expected: 36}
        - compare: {jmespath: "length(data.version)", comparator: "gt", expected: 0}

- test: # 正常获取应用列表
    - name: "valid GET /v1/apps/:aid/tasks"
    - url: {template: "v1/apps$appid/tasks"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data.tasks[*].appId", comparator: "contains", expected: {template: "$appid"}}
    - extract_binds:
        - 'taskid': {jmespath: 'data.tasks[0].id'}

- test: #正常获取应用的所有版本
    - name: "valid GET /v1/apps/:aid/versions"
    - url: {template: "/v1/apps$appid/versions"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.versions[*])", comparator: "gt", expected: 0}
    - extract_binds:
        - 'version': {jmespath: 'data.versions[0]'}

- test: #正常获取指定应用指定版本信息
    - name: "valid GET /v1/apps/:aid/versions"
    - url: {template: "/v1/apps$appid/versions/$version"}
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}

- test: #正常删除指定tasks
    - name: "POST /v1/tasks/delete"
    - url: "/v1/tasks/delete?scale=true"
    - method: "post"
    - headers: {template: {Authorization: $token}}
    - body: {template: '{"ids":["$taskid"]}' }
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}

- test: #正常删除应用
    - name: "valid DELETE /v1/apps/:aid"
    - url: {template: "/v1/apps$appid"}
    - method: "delete"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]

- test: #正常获取所有等待执行的任务实例
    - name: "POST /v1/queue"
    - url: "/v1/queue"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}


- test: #正常获取平台版本
    - name: "valid GET /version"
    - url: "/v1/version"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "length(data.version)", comparator: "gt", expected: 0}
        - compare: {jmespath: "length(data.build_time)", comparator: "gt", expected: 0}

- test: #正常获取平台健康检查
    - name: "GET /v1/health"
    - url: "/v1/health"
    - method: "get"
    - headers: {template: {Authorization: $token}}
    - expected_status: [200]
    - validators:
        - compare: {jmespath: "code", comparator: "eq", expected: 0}
        - compare: {jmespath: "data", comparator: "str_eq", expected: "healthy"}





